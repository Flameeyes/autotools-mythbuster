<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook"
	 xmlns:xl="http://www.w3.org/1999/xlink"
	 xmlns:xi="http://www.w3.org/2001/XInclude"
	 xml:id="pkgconfig.cross-compiling">
  <title>Supporting Cross-Compilation</title>

  <para>
    The design of the current <command>pkg-config</command> application and the interface of
    <function>PKG_PROG_PKG_CONFIG</function> allows them to be instrumental in proper
    cross-compilation of software, when used correctly. This only requires following a few simple
    rules.
  </para>

  <section>
    <title>Paths Handling</title>

    <para>
      When cross-compiling packages with multiple dependencies or entire operating system images, the
      focus is usually around one specific directory, called <emphasis>sysroot</emphasis>, used as
      prefix while mimicking the installation layout of a normal running system. This path needs to be
      prefixed to the paths added to the list of searched paths for headers and libraries, i.e., those
      that are passed to <option>-I</option>/<option>-L</option>, respectively to the compiler and
      link editor. At the same time, it should not be compiled in programs to refer to at runtime, nor
      it should be used as the destination path during installation.
    </para>

    <para>
      Since <command>pkg-config</command> original, and main, task is to report flags and paths, it is
      crucial that the sysroot handling is taken into consideration. At the time of writing, with
      version 0.25 of <application>pkgconfig</application> package, this is achieved mainly through
      the <varname>PKG_CONFIG_SYSROOT_DIR</varname> variable, which is set to the path of the sysroot,
      and is inserted in-between the <option>-I</option> or <option>-L</option> flags and the
      following path.
    </para>

    <important>
      <para>
	The content of <varname>PKG_CONFIG_SYSROOT_DIR</varname> is not injected in paths that are
	returned by <command>pkg-config --variable</command>, which makes them unsuitable to use
	during cross-compilation unless specifically designed to be used at that time.
      </para>

      <para>
	To design a variable to contain a path that needs to be used at build time, such as the path
	where a generation script is, you can prefix it in the <filename>.pc</filename> file with
	the built-in variable <literal>${pc_sysrootdir}</literal>.
      </para>
    </important>
  </section>
</section>
<!--
   Local Variables:
   mode: nxml
   mode: auto-fill
   mode: flyspell
   ispell-local-dictionary: "en_GB"
   fill-column: 100
   End:
-->
